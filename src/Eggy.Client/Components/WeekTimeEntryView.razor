@inject IWeekTimeProcessor WeekTimeProcessor

<table class="table">
    <thead>
    <tr>
        <th>
            Week @WeekTimeProcessor.WeekTime.Id
        </th>

        <Iterations Items="WeekTimeProcessor.WeekTime.ProjectEntries">
            <th>
                @context.Date.ToString("dd/MM")
            </th>
        </Iterations>
    </tr>
    <tr>
        <th>
            <abbr title="Hours">Hours</abbr>
        </th>

        <Iterations Items="WeekTimeProcessor.WeekTime.ProjectEntries">
            <th>
                @context.TotalHours
            </th>
        </Iterations>
    </tr>
    </thead>
    <tbody>

    <Iterations Items="WeekTimeProcessor.WeekTime.ProjectEntries.SelectMany(x => x.TimeEntries.Select(t => t.Project)).Distinct()" Context="project">
        <tr>
            <th>
                @project.Name
            </th>
            <Iterations Items="WeekTimeProcessor.WeekTime.ProjectEntries" Context="dayTimeEntry">

                @{ var entry = dayTimeEntry.TimeEntries.SingleOrDefault(x => x.Project.Id == project.Id); }

                <Condition Evaluation="@(entry is not null)">
                    <Match>
                        <td>@entry.Hours @entry.Comment</td>
                    </Match>
                    <NotMatch>
                        <td>-</td>
                    </NotMatch>
                </Condition>
            </Iterations>
        </tr>
    </Iterations>

    </tbody>

    <tfoot>

    </tfoot>
</table>

@code {

    protected override async Task OnInitializedAsync() => await WeekTimeProcessor.Load();

}